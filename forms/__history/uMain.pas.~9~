unit uMain;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Mask, Vcl.DBCtrls,
  Vcl.ExtCtrls, FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, Data.DB, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, FireDAC.UI.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Phys, FireDAC.Phys.PG, FireDAC.Phys.PGDef,
  FireDAC.VCLUI.Wait, Vcl.Grids, Vcl.DBGrids, Vcl.Buttons;

type
  TfrmMain = class(TForm)
    pnlHeader: TPanel;
    pnlFooter: TPanel;
    pnlMain: TPanel;
    btnRegisterPeople: TBitBtn;
    procedure btnRegisterPeopleClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmMain: TfrmMain;

implementation

uses
  uRegisterPeople;

{$R *.dfm}

procedure TfrmMain.btnRegisterPeopleClick(Sender: TObject);
begin
  frmRegisterPeople.showmodal;
end;

procedure TfrmMain.FormCreate(Sender: TObject);
begin
  FDConnection := TFDConnection.Create(nil);
  try
    FDConnection.DriverName                     := 'SQLite';
    FDConnection.Params.Values['Server']        := '';
    FDConnection.Params.Values['Port']          := '';
    FDConnection.Params.Values['Database']      := 'D:\Projetos_delphi\teste_fretecom\DB\teste_fretecom.db';
    FDConnection.Params.Values['User_Name']     := '';
    FDConnection.Params.Values['Password']      := '';
    FDConnection.Params.Values['CharacterSet']  := 'UTF8';

    FDConnection.Connected := True;
  except
    on E: Exception do
      Writeln('Erro ao conectar com o banco de dados: ' + E.Message);
  end;
end;

end.
