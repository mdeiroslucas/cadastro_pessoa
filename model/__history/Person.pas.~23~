unit Person;

interface

uses
  SysUtils, PersonType;

type TPerson = class
  constructor create;
  destructor destroy;

  private
    FbirthDate: TDate;
    Frg: string;
    Femail: string;
    Fcpf: string;
    Fphone: string;
    FfullName: string;
    FpersonType: TPersonType;
    Fdistrict: string;
    Fstreet: string;
    Fstate: string;
    Fcep: string;
    Fnumber: integer;
    Fcity: string;

    procedure SetbirthDate(const Value: TDate);
    procedure Setcpf(const Value: string);
    procedure Setemail(const Value: string);
    procedure SetfullName(const Value: string);
    procedure Setphone(const Value: string);
    procedure Setrg(const Value: string);
    procedure SetpersonType(const Value: TPersonType);
    procedure Setcep(const Value: string);
    procedure Setcity(const Value: string);
    procedure Setdistrict(const Value: string);
    procedure Setnumber(const Value: integer);
    procedure Setstate(const Value: string);
    procedure Setstreet(const Value: string);

  published
    property fullName: string read FfullName write SetfullName;
    property birthDate: TDate read FbirthDate write SetbirthDate;
    property cpf: string read Fcpf write Setcpf;
    property rg: string read Frg write Setrg;
    property email: string read Femail write Setemail;
    property phone: string read Fphone write Setphone;
    property street: string read Fstreet write Setstreet;
    property number: integer read Fnumber write Setnumber;
    property district: string read Fdistrict write Setdistrict;
    property city: string read Fcity write Setcity;
    property state: string read Fstate write Setstate;
    property cep: string read Fcep write Setcep;
    property personType: TPersonType read FpersonType write SetpersonType;

end;

implementation

{ TPerson }

constructor TPerson.create;
begin
  PersonType  :=  TPersonType.Create;
end;

destructor TPerson.destroy;
begin
  PersonType.Destroy;
end;

procedure TPerson.SetbirthDate(const Value: TDate);
begin
  FbirthDate := Value;
end;

procedure TPerson.Setcep(const Value: string);
begin
  Fcep := Value;
end;

procedure TPerson.Setcity(const Value: string);
begin
  Fcity := Value;
end;

procedure TPerson.Setcpf(const Value: string);
begin
  if Value.IsEmpty then
    raise Exception.Create('O cep do cliente deve ser informado!');

  Fcpf := Value;
end;

procedure TPerson.Setdistrict(const Value: string);
begin
  Fdistrict := Value;
end;

procedure TPerson.Setemail(const Value: string);
begin
  Femail := Value;
end;

procedure TPerson.SetfullName(const Value: string);
begin
  FfullName := Value;
end;

procedure TPerson.Setnumber(const Value: integer);
begin
  Fnumber := Value;
end;

procedure TPerson.SetpersonType(const Value: TPersonType);
begin
  FpersonType := Value;
end;

procedure TPerson.Setphone(const Value: string);
begin
  Fphone := Value;
end;

procedure TPerson.Setrg(const Value: string);
begin
  Frg := Value;
end;

procedure TPerson.Setstate(const Value: string);
begin
  Fstate := Value;
end;

procedure TPerson.Setstreet(const Value: string);
begin
  Fstreet := Value;
end;

end.
